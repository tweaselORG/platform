---
import '@datenanfragen/components/dist/index.css';
import '../styles/main.scss';
import { getAbsoluteLocaleUrl } from 'astro:i18n';
import { t, i18nDefinitions } from '../i18n/server';

export interface Props {
    title?: string;
}

const { title } = Astro.props;

const i18nDefinition = Object.fromEntries(
    Object.entries(i18nDefinitions[(Astro.currentLocale as 'en') || 'en'])
        .map(([scope, scopeTranslations]) => [
            scope,
            Object.fromEntries(Object.entries(scopeTranslations).filter(([key]) => key.endsWith('!'))),
        ])
        .filter(([, scopeTranslations]) => Object.keys(scopeTranslations || {}).length > 0),
);
---

<!doctype html>
<html lang={Astro.currentLocale}>
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta name="generator" content={Astro.generator} />
        <title>{title ? `${title} Â· Tweasel` : 'Tweasel'}</title>
    </head>
    <body>
        <a id="skip-to-content" href="#heading">{t('base', 'skip-to-content')}</a>

        <aside id="flash-messages"></aside>

        <header id="nav-header">
            <div id="nav-header-bg"></div>

            <div id="header-main" class="container">
                <a href={getAbsoluteLocaleUrl(Astro.currentLocale || 'en')} title={t('base', 'back-to-home')}>
                    <img id="logo" src="/img/logo.svg" alt={t('base', 'logo-alt')} height="32" width="134" />
                </a>

                <nav id="main-nav">
                    <div id="menu-items"></div>
                </nav>
                <div class="clearfix"></div>
            </div>

            <slot name="after-header-main">
                <div id="heading-bg">
                    <div id="heading" class="container">
                        <h1>{title}</h1>
                    </div>
                </div>
            </slot>
        </header>

        <div class="container">
            <main class="narrow-page">
                <slot />
            </main>
        </div>

        <script define:vars={{ i18nDefinition }} is:inline>
            window.I18N_DEFINITION = i18nDefinition;
        </script>
    </body>
</html>
